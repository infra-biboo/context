{
  "name": "claude-context-manager",
  "displayName": "Claude Context Manager",
  "description": "Smart context management for Claude AI tools",
  "version": "0.2.1",
  "publisher": "claude-dev",
  "repository": {
    "type": "git",
    "url": "https://github.com/claude-dev/claude-context-manager.git"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "claude-context.openPanel",
        "title": "Open Claude Context Panel"
      },
      {
        "command": "claude-context.test",
        "title": "Test Claude Context"
      },
      {
        "command": "claude-context.simulateCommit",
        "title": "Claude Context: Simulate Git Commit"
      },
      {
        "command": "claude-context.simulateFileChange",
        "title": "Claude Context: Simulate File Change"
      },
      {
        "command": "claude-context.generateMCPConfig",
        "title": "Claude Context: Generate Claude Code MCP Config"
      },
      {
        "command": "claude-context.generateClaudeDesktopConfig",
        "title": "Claude Context: Setup Claude Desktop Integration"
      },
      {
        "command": "claude-context.generateClineConfig",
        "title": "Claude Context: Setup Cline Integration"
      },
      {
        "command": "claude-context.generateGeminiConfig",
        "title": "Claude Context: Setup Gemini Integration"
      },
      {
        "command": "claude-context.setTokenUsage",
        "title": "Claude Context: Set Token Usage %"
      },
      {
        "command": "claude-context.resetTokenUsage",
        "title": "Claude Context: Reset Token Usage"
      },
      {
        "command": "claude-context.showTokenUsage",
        "title": "Claude Context: Show Token Usage"
      },
      {
        "command": "claude-context.simulateProgrammaticSave",
        "title": "Claude Context: Simulate Programmatic Save"
      },
      {
        "command": "claude-context.testCascadeEnrichment",
        "title": "Test Cascade Enrichment"
      },
      {
        "command": "claude-context.testMCPStatus",
        "title": "Test MCP Client Status"
      },
      {
        "command": "claude-context.testCommitEnrichment",
        "title": "Test Commit Enrichment"
      },
      {
        "command": "claude-context.testRealMCPConnection",
        "title": "Test Real MCP Connection"
      },
      {
        "command": "claude-context.configureMCP",
        "title": "Configure MCP Settings"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "claude-context",
          "title": "Claude Context Manager",
          "icon": "$(robot)"
        }
      ]
    },
    "views": {
      "claude-context": [
        {
          "id": "claude-context.panel",
          "name": "Context Manager",
          "type": "webview"
        }
      ]
    },
    "configuration": {
      "title": "Claude Context Manager",
      "properties": {
        "claude-context.enableMCP": {
          "type": "boolean",
          "default": false,
          "description": "Enable Model Context Protocol integration with Claude Desktop (optional feature)"
        },
        "claude-context.enrichment.apiEnabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable external API for context enrichment (fallback option)"
        },
        "claude-context.enrichment.apiProvider": {
          "type": "string",
          "enum": [
            "openai",
            "deepseek",
            "custom"
          ],
          "default": "deepseek",
          "description": "External API provider for enrichment"
        },
        "claude-context.enrichment.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for external enrichment service"
        },
        "claude-context.enrichment.model": {
          "type": "string",
          "default": "deepseek-chat",
          "description": "Model to use for external enrichment"
        },
        "claude-context.enrichment.customBaseURL": {
          "type": "string",
          "default": "",
          "description": "Custom base URL for external API (when provider is 'custom')"
        },
        "claude-context.enrichment.showFallbackNotifications": {
          "type": "boolean",
          "default": true,
          "description": "Show notifications when enrichment falls back to different strategies"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "vscode:prepublish-ci": "echo 'Building for CI' && npm run compile",
    "package-vsix": "vsce package",
    "publish-vsix": "vsce publish",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "mcp-bridge": "node dist/mcp-bridge.js",
    "build:bridge": "tsc src/mcp/mcp-bridge.ts --outDir dist --target es2020 --module commonjs --esModuleInterop",
    "dev:ui": "webpack serve --mode development --config webpack.config.js",
    "postinstall": "prebuild-install --fallback-to-build",
    "test:vsix": "node scripts/validate-vsix.js claude-context-manager.vsix"
  },
  "devDependencies": {
    "@babel/core": "^7.28.0",
    "@babel/preset-typescript": "^7.27.1",
    "@types/express": "^4.17.21",
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@types/vscode-webview": "^1.57.5",
    "babel-loader": "^10.0.0",
    "babel-preset-solid": "^1.9.6",
    "copy-webpack-plugin": "^13.0.0",
    "css-loader": "^7.1.2",
    "html-webpack-plugin": "^5.6.3",
    "style-loader": "^4.0.0",
    "ts-loader": "^9.4.2",
    "typescript": "^4.9.4",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.1",
    "webpack-dev-server": "^5.2.2",
    "prebuild-install": "^7.0.0",
    "adm-zip": "^0.5.10"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.15.0",
    "@vscode/sqlite3": "^5.1.8-vscode",
    "express": "^4.18.2",
    "lucide": "^0.525.0",
    "lucide-solid": "^0.525.0",
    "openai": "^4.104.0",
    "solid-js": "^1.9.7",
    "zod": "^3.25.73"
  },
  "bundledDependencies": [
    "@vscode/sqlite3"
  ]
}