# .github/workflows/build.yml
name: Build & Package Multi-Platform VSIX

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-binaries:
    name: Build sqlite3 on ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, arm64]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js v20 ðŸŸ¢
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Python (para node-gyp)
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Instalar build tools en Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Instalar Xcode CLI en macOS
        if: runner.os == 'macOS'
        run: xcode-select --install || true

      - name: (Opcional) Asegurar Python en Windows
        if: runner.os == 'Windows'
        run: choco install python --version=3.9.0 -y

      - name: Instalar dependencias (postinstall compila el .node)
        run: npm ci

      - name: Copiar binding compilado a binaries/
        run: |
          mkdir -p binaries
          node -e "
            const fs = require('fs'),
                  path = require('path'),
                  os = require('os');
            const plat = os.platform(), arch = os.arch();
            const src = path.join('node_modules','@vscode','sqlite3','build','Release','vscode-sqlite3.node');
            const dst = path.join('binaries',`vscode-sqlite3-${plat}-${arch}.node`);
            fs.copyFileSync(src, dst);
          "

      - name: Subir artefacto de binarios
        uses: actions/upload-artifact@v4
        with:
          name: sqlite3-binaries-${{ matrix.os }}-${{ matrix.arch }}
          path: binaries/

  package-vsix:
    name: Package VSIX
    runs-on: ubuntu-latest
    needs: build-binaries
    steps:
      - uses: actions/checkout@v4

      - name: Descargar artefactos de binarios
        uses: actions/download-artifact@v4
        with:
          path: binaries/

      - name: Instalar deps de producciÃ³n
        run: npm ci --omit=dev

      - name: Empaquetar VSIX
        run: npx vsce package --out claude-context-manager.vsix

      - name: Subir VSIX
        uses: actions/upload-artifact@v4
        with:
          name: claude-context-manager.vsix
          path: claude-context-manager.vsix
